import heapq

class PuzzleState:
    def __init__(self, board, parent=None, move=None, depth=0, cost=0):
        self.board = board
        self.parent = parent
        self.move = move
        self.depth = depth
        self.cost = cost  # f(n) = g(n) + h(n)

    def __lt__(self, other):
        return self.cost < other.cost

    def find_zero(self):
        return self.board.index(0)

    def generate_children(self):
        children = []
        zero_index = self.find_zero()
        row, col = divmod(z
